swagger: '2.0'

# TODO(?): POST or PUT (please not both)?
# TODO(?): pagination should only list resource names or the entire resource?
# TODO(?): version change? /v2 ?
# TODO(?): remove stats from call?
# TODO(?): amend log api? if we have /app/logs we could tail logs on an app (or trig?) or just point lookup for call
# TODO(?): 'namespace' or 'ns_id' field in objects? 'app_id' or 'app_name' in objects (trigger, app, etc)?
#           really need to figure this out, e.g. app right now has a weird mix of id and name. we should pick one.
# TODO(?): 'type' is dead right, async is now external?
# TODO(?): annotations & config & event.extensions redundant to a degree? naming confusing? discuss.
# TODO: post/put body and response objects have different required fields, etc; make 2 objects
# TODO: change params to $ref's
# TODO(orcl): 204 DELETE success
# TODO(orcl): 401 - should we define this to delineate w/ 404 even tho we don't have auth by default?
# TODO(orcl): operationId: each op?

info:
  title: fn
  description: The open source serverless platform.
  version: "0.3.0"
# the domain of the service
host: "127.0.0.1:8080"
# array of all schemes that your API supports
schemes:
  - https
  - http
# will be prefixed to all paths
# TODO(discuss): should we bump this?
basePath: /v42
consumes:
  - application/json
produces:
  - application/json
paths:
  /ns:
    get:

  /ns/{ns}:
    get:
    put:
    patch:
    delete:

  /ns/{ns}/funcs:
    get:

  /ns/{ns}/funcs/{func}:
    get:
    put:
    patch:
    delete:

  /ns/{ns}/apps/{app}/triggers:
    get:

  /ns/{ns}/apps/{app}/triggers/{trigger}:
    get:
    put:
    patch:
    delete:

  /ns/{ns}/apps:
    get:
      summary: "Get all app names."
      description: "Get a list of all the apps per namespace, returned in alphabetical order."
      tags:
        - Apps
      parameters:
        - $ref: '#/definitions/cursorParam'
        - $ref: '#/definitions/perPageParam'
      responses:
        200:
          description: List of apps.
          schema:
            $ref: '#/definitions/AppsWrapper'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: "Post new app"
      description: "Insert a new app"
      tags:
        - Apps
      parameters:
        - name: body
          in: body
          description: App to post.
          required: true
          schema:
            $ref: '#/definitions/AppWrapper'
      responses:
        200:
          description: App details and stats.
          schema:
            $ref: '#/definitions/AppWrapper'
        400:
          description: Parameters are missing or invalid.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: App already exists.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /ns/{ns}/apps/{app}:
    delete:
      summary: "Delete an app."
      description: "Delete an app."
      tags:
        - Apps
      parameters:
        - name: app
          in: path
          description: Name of the app.
          required: true
          type: string
      responses:
        200:
          description: Apps successfully deleted.
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: "Get information for a app."
      description: "This gives more details about a app, such as statistics."
      tags:
        - Apps
      parameters:
        - name: app
          in: path
          description: name of the app.
          required: true
          type: string
      responses:
        200:
          description: App details and stats.
          schema:
            $ref: '#/definitions/AppWrapper'
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: "Updates an app."
      description: "You can set app level settings here. "
      tags:
        - Apps
      parameters:
        - name: app
          in: path
          description: name of the app.
          required: true
          type: string
        - name: body
          in: body
          description: App to post.
          required: true
          schema:
            $ref: '#/definitions/AppWrapper'
      responses:
        200:
          description: App details and stats.
          schema:
            $ref: '#/definitions/AppWrapper'
        400:
          description: Parameters are missing or invalid.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /ns/{ns}/apps/{app}/triggers:
    post:
      summary: Create new Trigger
      description: Create a new trigger in an app, if app doesn't exists, it creates the app. Post does not skip validation of zero values.
      tags:
        - Triggers
      parameters:
        - name: app
          in: path
          description: name of the app.
          required: true
          type: string
        - name: body
          in: body
          description: One trigger to post.
          required: true
          schema:
            $ref: '#/definitions/TriggerWrapper'
      responses:
        200:
          description: Trigger created
          schema:
            $ref: '#/definitions/TriggerWrapper'
        400:
          description: Invalid trigger due to parameters being missing or invalid.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Trigger already exists.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    get:
      summary: Get trigger list by app name.
      description: This will list triggers for a particular app, returned in alphabetical order.
      tags:
        - Triggers
      parameters:
        - name: app
          in: path
          description: Name of app for this set of triggers.
          required: true
          type: string
        - name: image
          description: Trigger image to match, exact.
          required: false
          type: string
          in: query
        - $ref: '#/definitions/cursorParam'
        - $ref: '#/definitions/perPageParam'
      responses:
        200:
          description: Trigger information
          schema:
            $ref: '#/definitions/TriggerWrapper'
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /ns/{ns}/apps/{app}/triggers/{trigger}:
    put:
      summary: Create a Trigger if it does not exist. Update if it does. Will also create app if it does not exist.
      description: Update or Create a trigger
      tags:
        - Triggers
      parameters:
        - name: app
          in: path
          description: name of the app.
          required: true
          type: string
        - name: trigger
          in: path
          description: trigger name
          required: true
          type: string
        - name: body
          in: body
          description: One trigger to post.
          required: true
          schema:
            $ref: '#/definitions/TriggerWrapper'
      responses:
        200:
          description: Trigger created or updated
          schema:
            $ref: '#/definitions/TriggerWrapper'
        400:
          description: Invalid trigger due to parameters being missing or invalid.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update a Trigger, Fails if the trigger or app does not exist. Accepts partial updates / skips validation of zero values.
      description: Update a trigger
      tags:
        - Triggers
      parameters:
        - name: app
          in: path
          description: name of the app.
          required: true
          type: string
        - name: trigger
          in: path
          description: trigger path.
          required: true
          type: string
        - name: body
          in: body
          description: One trigger to post.
          required: true
          schema:
            $ref: '#/definitions/TriggerWrapper'
      responses:
        200:
          description: Trigger updated
          schema:
            $ref: '#/definitions/TriggerWrapper'
        400:
          description: Invalid trigger due to parameters being missing or invalid.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: App / Trigger does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Gets trigger by name
      description: Gets a trigger by name.
      tags:
        - Triggers
      parameters:
        - name: app
          in: path
          description: Name of app for this set of triggers.
          required: true
          type: string
        - name: trigger
          in: path
          description: Trigger name
          required: true
          type: string
      responses:
        200:
          description: Trigger information
          schema:
            $ref: '#/definitions/TriggerWrapper'
        404:
          description: Trigger does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Deletes the trigger
      tags:
        - Triggers
      description: Deletes the trigger.
      parameters:
        - name: app
          in: path
          description: Name of app for this set of triggers.
          required: true
          type: string
        - name: trigger
          in: path
          description: Trigger name
          required: true
          type: string
      responses:
        200:
          description: Trigger successfully deleted.
        404:
          description: Trigger does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /ns/{ns}/apps/{app}/calls/{call}/log:
    get:
      summary: Get call logs
      description: Get call logs
      tags:
        - Call
        - Log
      parameters:
        - name: app
          description: App Name
          required: true
          type: string
          in: path
        - name: call
          description: Call ID.
          required: true
          type: string
          in: path
      responses:
        200:
          description: Log found
          schema:
            $ref:  '#/definitions/LogWrapper'
        404:
          description: Log not found.
          schema:
            $ref: '#/definitions/Error'

  /ns/{ns}/apps/{app}/calls/{call}:
    get:
      summary: Get call information
      description: Get call information
      tags:
        - Call
      parameters:
        - name: app
          description: app name
          required: true
          type: string
          in: path
        - name: call
          description: Call ID.
          required: true
          type: string
          in: path
      responses:
        200:
          description: Call found
          schema:
            $ref:  '#/definitions/CallWrapper'
        404:
          description: Call not found.
          schema:
            $ref: '#/definitions/Error'

  /ns/{ns}/apps/{app}/calls:
    get:
      summary: Get app-bound calls.
      description: Get app-bound calls can filter to trigger-bound calls, results returned in created_at, descending order (newest first).
      tags:
        - Call
      parameters:
        - name: app
          description: App name.
          required: true
          type: string
          in: path
        - name: trigger
          description: Trigger name to match, exact.
          required: false
          type: string
          in: query
        - $ref: '#/definitions/cursorParam'
        - $ref: '#/definitions/perPageParam'
        - name: from_time
          description: Unix timestamp in seconds, of call.created_at to begin the results at, default 0.
          required: false
          type: integer
          in: query
        - name: to_time
          description: Unix timestamp in seconds, of call.created_at to end the results at, defaults to latest.
          required: false
          type: integer
          in: query
      responses:
        200:
          description: Calls found
          schema:
            $ref:  '#/definitions/CallsWrapper'
        404:
          description: Calls not found.
          schema:
            $ref: '#/definitions/Error'

definitions:
  ResourceConfig:
    name: resource_config
    type: object
    properties:
      memory:
        type: integer
        format: uint64
        description: Max usable memory for this trigger (MiB).
      cpus:
        type: string
        description: Max usable CPU cores for this trigger. Value in MilliCPUs (eg. 500m) or as floating-point (eg. 0.5)
      timeout:
        type: integer
        default: 30
        format: int32
        description: Timeout for executions of this trigger. Value in Seconds
      idle_timeout:
        type: integer
        default: 30
        format: int32
        description: Hot functions idle timeout before termination. Value in Seconds

  Trigger:
    type: object
    properties:
      namespace:
        type: string
        description: namespace this trigger resides in
      id:
        type: string
        description: App ID
        readOnly: true
      app_id:
        type: string
        description: App ID
      name:
        type: string
        description: unique name for this trigger, used to identify this trigger
        readOnly: true
      $ref: '#/definitions/ResourceConfig'
      config:
        type: object
        description: Trigger configuration - overrides application configuration
        additionalProperties:
          type: string
      annotations:
        type: object
        description: Trigger annotations - this is a map of annotations attached to this trigger, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      created_at:
        type: string
        format: date-time
        description: Time when trigger was created. Always in UTC.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that trigger was updated. Always in UTC.
        readOnly: true

  App:
    type: object
    properties:
      namespace:
        type: string
        description: namespace
      id:
        type: string
        description: App ID
        readOnly: true
      name:
        type: string
        description: "Name of this app. Must be different than the image name. Can ony contain alphanumeric, -, and _."
      config:
        type: object
        description: Application function configuration, applied to all triggers.
        additionalProperties:
          type: string
      annotations:
        type: object
        description: Application annotations - this is a map of annotations attached to this app, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      created_at:
        type: string
        format: date-time
        description: Time when app was created. Always in UTC.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that app was updated. Always in UTC.
        readOnly: true

  TriggersWrapper:
    type: object
    required:
      - triggers
    properties:
      - $ref: '#/definitions/nextCursorParam'
      triggers:
        type: array
        items:
          $ref: '#/definitions/Trigger'
      error:
        $ref: '#/definitions/ErrorBody'

  TriggerWrapper:
    type: object
    required:
      - trigger
    properties:
      message:
        type: string
      error:
        $ref: '#/definitions/ErrorBody'
      trigger:
        $ref: '#/definitions/Trigger'

  AppsWrapper:
    type: object
    required:
      - apps
    properties:
      - $ref: '#/definitions/nextCursorParam'
      apps:
        type: array
        items:
          $ref: '#/definitions/App'
      error:
        $ref: '#/definitions/ErrorBody'

  AppWrapper:
    type: object
    required:
      - app
    properties:
      app:
        $ref: '#/definitions/App'
      error:
        $ref: '#/definitions/ErrorBody'

  CallsWrapper:
    type: object
    required:
      - calls
    properties:
      - $ref: '#/definitions/nextCursorParam'
      calls:
        type: array
        items:
          $ref: '#/definitions/Call'
      error:
        $ref: '#/definitions/ErrorBody'

  CallWrapper:
    type: object
    required:
      - call
    properties:
      call:
        $ref: '#/definitions/Call'
        description: "Call object."

  LogWrapper:
    type: object
    required:
      - log
    properties:
      log:
        $ref: '#/definitions/Log'
        description: "Call log entry."

  Log:
    type: object
    properties:
      call_id:
        type: string
        description: Call UUID ID
      log:
        type: string # maybe bytes, long logs wouldn't fit into string type

  Call:
    type: object
    properties:
      id:
        type: string
        description: Call UUID ID.
        readOnly: true
      status:
        type: string
        description: Call execution status.
        readOnly: true
      error:
        type: string
        description: Call execution error, if status is 'error'.
        readOnly: true
      namespace_id:
        type: string
        description: namespace ID of trigger
        readOnly: true
      app_id:
        type: string
        description: App ID of trigger
        readOnly: true
      trigger_id:
        type: string
        description: App trigger that is being executed.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Time when call was submitted. Always in UTC.
        readOnly: true
      started_at:
        type: string
        format: date-time
        description: Time when call started execution. Always in UTC.
        readOnly: true
      completed_at:
        type: string
        format: date-time
        description: Time when call completed, whether it was successul or failed. Always in UTC.
        readOnly: true
      stats:
        type: array
        items:
          $ref: '#/definitions/Stat'
        description: A histogram of stats for a call, each is a snapshot of a calls state at the timestamp.
        readOnly: true

  Stat:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
      metrics:
        type: object
        properties:
          net_rx:
            type: integer
            format: int64
          net_tx:
            type: integer
            format: int64
          mem_limit:
            type: integer
            format: int64
          mem_usage:
            type: integer
            format: int64
          disk_read:
            type: integer
            format: int64
          disk_write:
            type: integer
            format: int64
          cpu_user:
            type: integer
            format: int64
          cpu_total:
            type: integer
            format: int64
          cpu_kernel:
            type: integer
            format: int64

  ErrorBody:
    type: object
    properties:
      message:
        type: string
        readOnly: true
      fields:
        type: string
        readOnly: true

  Error:
    type: object
    properties:
      error:
        $ref: '#/definitions/ErrorBody'

  cursorParam:
      name: cursor
      description: Cursor from previous response.next_cursor to begin results after, if any.
      required: false
      type: string
      in: query
  perPageParam:
      name: per_page
      description: Number of results to return, defaults to 30. Max of 100.
      required: false
      type: integer
      in: query
  nextCursorParam:
    name: next_cursor
    type: string
    description: cursor to send with subsequent request to receive the next page, if non-empty
    readOnly: true

